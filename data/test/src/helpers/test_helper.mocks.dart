// Mocks generated by Mockito 5.4.5 from annotations
// in data/test/src/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i16;
import 'dart:typed_data' as _i17;

import 'package:data/src/datasources/db/database_helper.dart' as _i15;
import 'package:data/src/datasources/movie_local_data_source.dart' as _i8;
import 'package:data/src/datasources/movie_remote_data_source.dart' as _i5;
import 'package:data/src/datasources/tv_local_data_source.dart' as _i13;
import 'package:data/src/datasources/tv_remote_data_source.dart' as _i11;
import 'package:data/src/models/movie_detail_model.dart' as _i2;
import 'package:data/src/models/movie_model.dart' as _i7;
import 'package:data/src/models/movie_table.dart' as _i9;
import 'package:data/src/models/tv_detail_model.dart' as _i3;
import 'package:data/src/models/tv_model.dart' as _i12;
import 'package:data/src/models/tv_table.dart' as _i14;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailResponse_0 extends _i1.SmartFake
    implements _i2.MovieDetailResponse {
  _FakeMovieDetailResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvDetailResponse {
  _FakeTvDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i5.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i7.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i6.Future<List<_i7.MovieModel>>.value(
              <_i7.MovieModel>[],
            ),
          )
          as _i6.Future<List<_i7.MovieModel>>);

  @override
  _i6.Future<List<_i7.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i6.Future<List<_i7.MovieModel>>.value(
              <_i7.MovieModel>[],
            ),
          )
          as _i6.Future<List<_i7.MovieModel>>);

  @override
  _i6.Future<List<_i7.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i6.Future<List<_i7.MovieModel>>.value(
              <_i7.MovieModel>[],
            ),
          )
          as _i6.Future<List<_i7.MovieModel>>);

  @override
  _i6.Future<_i2.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i6.Future<_i2.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_0(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i6.Future<_i2.MovieDetailResponse>);

  @override
  _i6.Future<List<_i7.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i6.Future<List<_i7.MovieModel>>.value(
              <_i7.MovieModel>[],
            ),
          )
          as _i6.Future<List<_i7.MovieModel>>);

  @override
  _i6.Future<List<_i7.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i6.Future<List<_i7.MovieModel>>.value(
              <_i7.MovieModel>[],
            ),
          )
          as _i6.Future<List<_i7.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i8.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [movie]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<String> removeWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<_i9.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i6.Future<_i9.MovieTable?>.value(),
          )
          as _i6.Future<_i9.MovieTable?>);

  @override
  _i6.Future<List<_i9.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i6.Future<List<_i9.MovieTable>>.value(
              <_i9.MovieTable>[],
            ),
          )
          as _i6.Future<List<_i9.MovieTable>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i11.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i12.TvModel>> getNowPlayingTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingTvs, []),
            returnValue: _i6.Future<List<_i12.TvModel>>.value(<_i12.TvModel>[]),
          )
          as _i6.Future<List<_i12.TvModel>>);

  @override
  _i6.Future<List<_i12.TvModel>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue: _i6.Future<List<_i12.TvModel>>.value(<_i12.TvModel>[]),
          )
          as _i6.Future<List<_i12.TvModel>>);

  @override
  _i6.Future<List<_i12.TvModel>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue: _i6.Future<List<_i12.TvModel>>.value(<_i12.TvModel>[]),
          )
          as _i6.Future<List<_i12.TvModel>>);

  @override
  _i6.Future<_i3.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i6.Future<_i3.TvDetailResponse>.value(
              _FakeTvDetailResponse_1(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i6.Future<_i3.TvDetailResponse>);

  @override
  _i6.Future<List<_i12.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i6.Future<List<_i12.TvModel>>.value(<_i12.TvModel>[]),
          )
          as _i6.Future<List<_i12.TvModel>>);

  @override
  _i6.Future<List<_i12.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue: _i6.Future<List<_i12.TvModel>>.value(<_i12.TvModel>[]),
          )
          as _i6.Future<List<_i12.TvModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i13.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i14.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [tv]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<String> removeWatchlist(_i14.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<_i14.TvTable?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i6.Future<_i14.TvTable?>.value(),
          )
          as _i6.Future<_i14.TvTable?>);

  @override
  _i6.Future<List<_i14.TvTable>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i6.Future<List<_i14.TvTable>>.value(<_i14.TvTable>[]),
          )
          as _i6.Future<List<_i14.TvTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i15.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<int> insertWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i6.Future<int>.value(0),
          )
          as _i6.Future<int>);

  @override
  _i6.Future<int> insertWatchlistTv(_i14.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlistTv, [tv]),
            returnValue: _i6.Future<int>.value(0),
          )
          as _i6.Future<int>);

  @override
  _i6.Future<int> removeWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i6.Future<int>.value(0),
          )
          as _i6.Future<int>);

  @override
  _i6.Future<int> removeWatchlistTv(_i14.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlistTv, [tv]),
            returnValue: _i6.Future<int>.value(0),
          )
          as _i6.Future<int>);

  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i6.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i6.Future<_i4.Response>);

  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<_i17.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i6.Future<_i17.Uint8List>.value(_i17.Uint8List(0)),
          )
          as _i6.Future<_i17.Uint8List>);

  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i6.Future<_i4.StreamedResponse>.value(
              _FakeStreamedResponse_3(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i6.Future<_i4.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
